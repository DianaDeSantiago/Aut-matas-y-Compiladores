%{
#include <stdio.h>
#include <stdlib.h>
%}

%%

[a-z]*ae[a-z]*      { printf("TOKEN: Palabra con 'ae' -> %s\n", yytext); }
[a-z]*ai[a-z]*      { printf("TOKEN: Palabra con 'ai' -> %s\n", yytext); }
[a-z]*ao[a-z]*      { printf("TOKEN: Palabra con 'ao' -> %s\n", yytext); }
[a-z]*au[a-z]*      { printf("TOKEN: Palabra con 'au' -> %s\n", yytext); }

(00[01]*)|([01]*00) { printf("TOKEN: Palabra en {0,1} que inicia o termina con '00' -> %s\n", yytext); }

[0-9]+              { printf("TOKEN: Número entero -> %s\n", yytext); }
[0-9]+\\.[0-9]+     { printf("TOKEN: Número decimal -> %s\n", yytext); }

"class"             { printf("TOKEN: Palabra reservada en Java -> %s\n", yytext); }
"if"                { printf("TOKEN: Palabra reservada en Java -> %s\n", yytext); }
"void"              { printf("TOKEN: Palabra reservada en Java -> %s\n", yytext); }
"static"            { printf("TOKEN: Palabra reservada en Java -> %s\n", yytext); }
"public"            { printf("TOKEN: Palabra reservada en Java -> %s\n", yytext); }

[A-Z][a-z]*         { printf("TOKEN: Nombre propio -> %s\n", yytext); }

[ \\t\\n]           ; /* Ignorar espacios y saltos de línea */

.                  { printf("TOKEN NO RECONOCIDO: %s\n", yytext); }

%%

int main() {
    printf("Ingrese texto para analizar:\n");
    yylex();
    return 0;
}

int yywrap() {
    return 1;
}
